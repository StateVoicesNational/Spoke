{
  "name": "spoke",
  "version": "14.0.1",
  "description": "Spoke",
  "main": "src/server",
  "engines": {
    "node": ">=20.11.1",
    "npm": "10.2.4"
  },
  "scripts": {
    "test": "jest --forceExit --runInBand --detectOpenHandles --verbose=false",
    "test-watch": "jest --watch --forceExit --runInBand --detectOpenHandles --verbose=false",
    "test-cache": "REDIS_FAKE=1 jest --runInBand --forceExit --detectOpenHandles",
    "test-rediscache": "REDIS_URL=redis://127.0.0.1:6379 CACHE_PREFIX=test jest --runInBand --forceExit --testPathIgnorePatterns=__test__/components/ __test__/containers __test__/cypress __test__/server/api/campaign/updateQuestionResponses.test.js --detectOpenHandles",
    "test-rediscache-contactcache": "REDIS_URL=redis://127.0.0.1:6379 CACHE_PREFIX=test REDIS_CONTACT_CACHE=1 jest --runInBand --forceExit --testPathIgnorePatterns=__test__/components/ __test__/containers __test__/cypress __test__/server/api/campaign/updateQuestionResponses.test.js --detectOpenHandles",
    "test-cypress": "NODE_ENV=test DB_TYPE=pg DEFAULT_SERVICE=fakeservice SESSION_SECRET=secret DB_NAME=spoke_test DB_USER=spoke_test DB_PASSWORD=spoke_test cypress open",
    "test-sqlite": "jest --config jest.config.sqlite.js --runInBand --forceExit --detectOpenHandles",
    "test-coverage": "jest --coverage --detectOpenHandles --runInBand",
    "test-coverage-bothbackends": "jest --runInBand --config jest.config.sqlite.js -- __test__/backend.test.js && jest --coverage",
    "knex": "knex --knexfile ./knexfile.env.js",
    "clean": "rm -rf $OUTPUT_DIR",
    "lint": "eslint --fix --ext js --ext jsx src",
    "process-message-csv": "./dev-tools/babel-run-with-env.js ./src/workers/process-message-csv.js",
    "prod-build-client": "webpack --config ./webpack/config.js",
    "prod-maybe-build-client": "if [ \"$ASSETS_DIR_PREBUILT\" != \"\" ] ; then npm run install-prebuilt-assets; else npm run prod-build-client; fi",
    "prod-build-server": "babel ./src  -d ./build/server/ --source-maps --copy-files --ignore \"src/components,src/containers,src/client,src/styles,./src/routes.jsx\"; babel ./migrations -d ./build/server/migrations/ --source-maps --copy-files",
    "prod-build": "npm run clean && npm run prod-build-client && npm run prod-build-server",
    "prod-static-upload": "if [ \"$S3_STATIC_PATH\" != \"\" ] ; then aws s3 sync --acl public-read ./build/client/assets/ $S3_STATIC_PATH ; fi",
    "postinstall": "if [ \"$NODE_ENV\" = production ] ; then npm run prod-build-server && npm run prod-maybe-build-client && npm run prod-static-upload && npm run install-config-file; npm run notify-slack; fi",
    "xpostinstall": "if [ \"$NODE_ENV\" = production ] ; then npm run prod-build && npm run prod-static-upload && npm run install-config-file && npm run notify-slack; fi",
    "notify-slack": "if [ \"$SLACK_NOTIFY_URL\" != \"\" ] ; then echo notifying slack && curl -XPOST -d '{\"channel\": \"#spoke\", \"text\":\"'\"$(whoami) building spoke $(git log -1 --pretty=%h) for $AWS_S3_BUCKET_NAME\"'\"}' $SLACK_NOTIFY_URL; fi",
    "install-config-file": "if [ \"$CONFIG_FILE\" != \"\" ] ; then cp $CONFIG_FILE ./CONFIG_FILE.json; fi",
    "install-prebuilt-assets": "if [ \"$ASSETS_DIR_PREBUILT\" != \"\" ] ; then cp -rp $ASSETS_DIR_PREBUILT ./build/; fi",
    "start": "node ./build/server/server",
    "start:heroku": "BASE_URL=$(node ./build/server/heroku/print-base-url) npm start",
    "start:test": "nf start -w --env ./dev-tools/.env.test --procfile ./dev-tools/Procfile.test",
    "start:test-babel": "nodemon --signal SIGTERM -e js,jsx,md,mustache -w ./src --exec ./dev-tools/babel-run -- ./src/server",
    "dev-heroku-dispatch": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run-with-env.js -- ./src/heroku/heroku-dispatch",
    "prod-heroku-dispatch": "node ./build/server/heroku/heroku-dispatch.js",
    "dev-message-sender-01": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run -- ./src/workers/message-sender-01",
    "prod-message-sender-01": "./dev-tools/babel-run ./src/workers/message-sender-01.js",
    "dev-message-sender-234": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run -- ./src/workers/message-sender-234",
    "prod-message-sender-234": "./dev-tools/babel-run ./src/workers/message-sender-234.js",
    "dev-message-sender-56": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run -- ./src/workers/message-sender-56",
    "prod-message-sender-56": "./dev-tools/babel-run ./src/workers/message-sender-56.js",
    "dev-message-sender-789": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run -- ./src/workers/message-sender-789",
    "prod-message-sender-789": "./dev-tools/babel-run ./src/workers/message-sender-789.js",
    "dev-job-handler": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run -- ./src/workers/job-handler",
    "prod-job-handler": "./dev-tools/babel-run ./src/workers/job-handler",
    "dev-incoming-message-handler": "nodemon --signal SIGTERM -e js,jsx -w ./src --exec ./dev-tools/babel-run -- ./src/workers/incoming-message-handler",
    "prod-incoming-message-handler": "./dev-tools/babel-run ./src/workers/incoming-message-handler.js",
    "predev-start": "npm run clean",
    "dev-start": "nodemon --signal SIGTERM -e js,jsx,md,mustache -w ./src --exec ./dev-tools/babel-run -- ./src/server",
    "dev-start-debug": "nodemon --signal SIGTERM -e js,jsx,md,mustache -w ./src --exec ./dev-tools/babel-run-debug  -- ./src/server",
    "generate-contacts": "./dev-tools/babel-run ./dev-tools/generate-contacts.js",
    "jest-test": "jest __test__/backend.test.js",
    "dev": "nf start -w --procfile ./dev-tools/Procfile.dev",
    "debug-server": "nf start -w --procfile ./dev-tools/Procfile-debug-server.dev",
    "buy-numbers": "./dev-tools/babel-run-with-env.js ./dev-tools/buy-numbers.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/StateVoicesNational/spoke.git"
  },
  "keywords": [
    "spoke",
    "sms",
    "texting",
    "campaigns",
    "campaigning",
    "politics",
    "activism",
    "organizing",
    "field"
  ],
  "author": "Axle Factory",
  "license": "GPL-3.0-only",
  "bugs": {
    "url": "https://github.com/StateVoicesNational/Spoke/issues"
  },
  "homepage": "https://github.com/StateVoicesNational/Spoke/#readme",
  "dependencies": {
    "@aoberoi/passport-slack": "^1.0.5",
    "@apollo/client": "^3.10.8",
    "@apollo/server": "^4.10.4",
    "@aws-sdk/client-cloudwatch": "^3.609.0",
    "@aws-sdk/client-cloudwatch-events": "^3.620.0",
    "@aws-sdk/client-lambda": "^3.609.0",
    "@aws-sdk/client-s3": "^3.609.0",
    "@aws-sdk/client-sqs": "^3.609.0",
    "@aws-sdk/s3-request-presigner": "^3.609.0",
    "@babel/cli": "^7.24.7",
    "@babel/core": "^7.24.7",
    "@babel/plugin-proposal-export-default-from": "^7.24.7",
    "@babel/plugin-syntax-flow": "^7.24.7",
    "@babel/plugin-transform-class-properties": "^7.24.7",
    "@babel/plugin-transform-nullish-coalescing-operator": "^7.24.7",
    "@babel/plugin-transform-optional-chaining": "^7.24.7",
    "@babel/plugin-transform-react-jsx": "^7.24.7",
    "@babel/plugin-transform-runtime": "^7.24.7",
    "@babel/preset-env": "^7.24.7",
    "@babel/preset-react": "^7.24.7",
    "@babel/preset-typescript": "^7.24.7",
    "@babel/register": "^7.24.6",
    "@babel/traverse": "7.25.1",
    "@bandwidth/numbers": "^1.10.0",
    "@date-io/core": "^1.3.13",
    "@date-io/date-fns": "^3.0.0",
    "@graphql-tools/graphql-file-loader": "^8.0.1",
    "@graphql-tools/load": "^8.0.2",
    "@graphql-tools/schema": "^10.0.4",
    "@trt2/gsm-charset-utils": "^1.0.13",
    "aphrodite": "^2.3.1",
    "auth0-js": "^9.26.1",
    "aws-serverless-express": "^3.3.6",
    "babel-loader": "^9.1.3",
    "babel-polyfill": "^6.26.0",
    "babel-runtime": "^6.26.0",
    "bandwidth-sdk": "^1.0.2",
    "body-parser": "^1.15.2",
    "browserify": "^17.0.0",
    "color-difference": "^0.3.4",
    "cookie-session": "^2.1.0",
    "dataloader": "^2.2.2",
    "dotenv": "^16.4.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "express": "^4.19.2",
    "fs": "^0.0.2",
    "google-libphonenumber": "^3.2.35",
    "googleapis": "^39.2.0",
    "graphql": "^16.9.0",
    "graphql-date": "^1.0.3",
    "graphql-tag": "^2.10.3",
    "graphql-type-json": "^0.3.2",
    "heroku-ssl-redirect": "^0.1.1",
    "humps": "2.0.1",
    "is-url": "^1.2.2",
    "isomorphic-fetch": "^3.0.0",
    "jest-each": "^0.3.1",
    "json-loader": "^0.5.4",
    "jsonwebtoken": "^9.0.0",
    "knex": "^3.1.0",
    "lodash": "^4.13.1",
    "mailgun-js": "^0.22.0",
    "minilog": "^3.0.1",
    "moment": "2.29.4",
    "moment-timezone": "^0.5.45 ",
    "nexmo": "^2.3.2",
    "node-fetch": "^2.6.7",
    "nodemailer": "^6.9.14",
    "omit-deep-lodash": "^1.1.4",
    "papaparse": "^5.1.1",
    "passport": "^0.3.2",
    "passport-auth0": "^0.6.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "passport-local-authenticate": "^1.2.0",
    "pg": "^8.12.0",
    "pg-connection-string": "^2.6.4",
    "pg-query-stream": "^4.6.0",
    "prop-types": "^15.6.0",
    "query-string": "^9.0.0",
    "react": "16.14.0",
    "react-dnd": "7.7.0",
    "redis": "^4.6.15",
    "request": "^2.81.0",
    "rethink-knex-adapter": "0.4.20",
    "rollbar": "^2.26.4",
    "terser-webpack-plugin": "^5.3.10",
    "thinky": "^2.3.3",
    "timezonecomplete": "^5.13.1",
    "twilio": "^4.23.0",
    "typescript": "^3.2.1",
    "us-area-codes": "^1.0.0",
    "uuid": "^9.0.0",
    "wait-for-expect": "^3.0.2",
    "webpack": "^5.92.1",
    "webpack-cli": "^4.10.0",
    "webpack-manifest-plugin": "^5.0.0",
    "yup": "0.32.3"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.24.7",
    "babel-jest": "^29.3.1",
    "babel-preset-es2017": "^6.24.1",
    "cypress": "5.6.0",
    "cypress-file-upload": "^4.0.6",
    "cypress-wait-until": "^1.7.1",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.8",
    "eslint": "^8.56.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^6.10.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.9.0",
    "eslint-plugin-react": "^7.34.3",
    "fakeredis": "^2.0.0",
    "foreman": "^3.0.1",
    "husky": "4",
    "jest-environment-jsdom": "^29.7.0",
    "jest-when": "^3.6.0",
    "json2csv": "^3.6.2",
    "lint-staged": "^9.2.0",
    "mockdate": "^3.0.5",
    "nock": "13.5.4",
    "nodemon": "^2.0.2",
    "prettier": "^1.18.2",
    "react-hot-loader": "4.13.0",
    "react-scripts": "^5.0.1",
    "react-test-renderer": "16",
    "regenerator-runtime": "^0.10.5",
    "sqlite3": "^5.1.2",
    "supertest": "^6.3.4",
    "wait-on": "^2.1.0",
    "webpack-dev-server": "3"
  },
  "lint-staged": {
    "*.{js,jsx,css,json}": [
      "prettier --write",
      "git add"
    ]
  },
  "optionalDependencies": {
    "@material-ui/core": "^4.11.3",
    "@material-ui/icons": "^4.11.2",
    "@material-ui/lab": "^4.0.0-alpha.57",
    "@material-ui/pickers": "^3.3.10",
    "aws-sdk": "^2.1664.0",
    "chart.js": "^2.9.4",
    "date-fns": "^2.19.0",
    "draft-js": "^0.11.7",
    "material-ui-search-bar": "^1.0.0",
    "mui-datatables": "^3.7.7",
    "react-async-script": "^0.6.0",
    "react-chartjs-2": "^2.11.1",
    "react-color": "^2.19.3",
    "react-dom": "16.14.0",
    "react-formal": "2.2.2",
    "react-router": "^3.2.0",
    "react-tooltip": "^4.2.13"
  },
  "resolutions": {
    "strip-ansi": "6.0.1",
    "axios": "0.28.0",
    "jest": "^29.7.0"
  }
}
