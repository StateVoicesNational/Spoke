From ae56696728b5679a2e04116c4c20805f337441f1 Mon Sep 17 00:00:00 2001
From: Benjamin Mort <benm@getup.org.au>
Date: Tue, 3 Oct 2017 10:59:21 +1100
Subject: [PATCH 1/3] terms begining

---
 src/components/AssignmentTexter.jsx   |  1 +
 src/components/CampaignBasicsForm.jsx |  1 +
 src/containers/Terms.jsx              | 89 +++++++++++++++++++++++++++++++++++
 src/migrations/index.js               |  9 ++++
 src/routes.jsx                        |  2 +
 src/server/api/schema.js              | 10 ++++
 src/server/api/user.js                |  3 +-
 7 files changed, 114 insertions(+), 1 deletion(-)
 create mode 100644 src/containers/Terms.jsx

diff --git a/src/components/AssignmentTexter.jsx b/src/components/AssignmentTexter.jsx
index b0c9e95..90aa1e2 100644
--- a/src/components/AssignmentTexter.jsx
+++ b/src/components/AssignmentTexter.jsx
@@ -144,6 +144,7 @@ class AssignmentTexter extends React.Component {
   renderTexter() {
     const { assignment } = this.props
     const { campaign, texter } = assignment
+    console.log('~~~~~~~', texter)
     const contact = this.currentContact()
     const navigationToolbarChildren = this.renderNavigationToolbarChildren()
     return (
diff --git a/src/components/CampaignBasicsForm.jsx b/src/components/CampaignBasicsForm.jsx
index f5e176d..73e7eaf 100644
--- a/src/components/CampaignBasicsForm.jsx
+++ b/src/components/CampaignBasicsForm.jsx
@@ -34,6 +34,7 @@ export default class CampaignBasicsForm extends React.Component {
   }
 
   render() {
+    console.log(moment().format('LTS'))
     return (
       <div>
         <CampaignFormSectionHeading
diff --git a/src/containers/Terms.jsx b/src/containers/Terms.jsx
new file mode 100644
index 0000000..ed528d3
--- /dev/null
+++ b/src/containers/Terms.jsx
@@ -0,0 +1,89 @@
+import React from 'react';
+import loadData from './hoc/load-data'
+import gql from 'graphql-tag'
+import {
+  Card,
+  CardTitle,
+  CardActions,
+  CardText,
+} from 'material-ui/Card';
+import RaisedButton from 'material-ui/RaisedButton';
+import wrapMutations from './hoc/wrap-mutations'
+import { withRouter } from 'react-router'
+
+class Terms extends React.Component {
+
+  componentWillMount() {
+    const user = this.props.data.currentUser
+    console.log('~~~~~~~~', user)
+  }
+
+  handleTermsAgree = () => {
+    console.log('!!!!!!', this.props.data.currentUser.id)
+    this.props
+      .mutations
+      .userAgreeTerms(this.props.data.currentUser.id)
+  }
+
+  render() {
+    return (
+      <div styles={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>
+        <Card>
+          <CardTitle title="Code Of Conduct" subtitle="What to expect" />
+          <CardText>
+            <h3><u>Inappropriate Behaviour</u></h3>
+              <p styles={{padding: '20px 0'}}>
+                Occasionally someone might be rude or use inappropriate language to you — please don’t engage or respond in kind. We will make sure that person isn’t contacted again. 
+              </p>
+            <h3><u>Commit to Reply</u></h3>
+              <p styles={{padding: '20px 0'}}>Please commit to responding to people who reply to you. We're attempting to grow trust and understanding in our community and maintaining an open dialogue is key.</p>
+            <h3><u>Retention</u></h3>
+              <p styles={{padding: '20px 0'}}>
+                GetUp maintains a record of all conversations on this Spoke account.
+              </p>
+          </CardText>
+          <CardActions>
+          <RaisedButton
+            primary={true}
+            label="Agree"
+            onClick={this.handleTermsAgree}
+          />
+          </CardActions>
+        </Card>
+      </div>
+    )
+  }
+}
+
+Terms.propTypes = {
+  mutations: React.PropTypes.object,
+  router: React.PropTypes.object,
+  data: React.PropTypes.object
+}
+
+const mapQueriesToProps = () => ({
+  data: {
+    query: gql` query getCurrentUser {
+      currentUser {
+        id,
+        terms
+      }
+    }`
+  }
+})
+
+const mapMutationsToProps = (ownProps) => ({
+  userAgreeTerms: (userId) => ({
+    mutation: gql`
+        mutation userAgreeTerms($userId: String!) {
+          userAgreeTerms(userId: $userId) {
+            id
+          }
+        }`,
+    variables: {
+      userId
+    }
+  })
+})
+
+export default loadData(wrapMutations(withRouter(Terms)), { mapQueriesToProps, mapMutationsToProps })
diff --git a/src/migrations/index.js b/src/migrations/index.js
index dcf0457..698e40d 100644
--- a/src/migrations/index.js
+++ b/src/migrations/index.js
@@ -52,6 +52,15 @@ const migrations = [
       })
       console.log('added updated_at column to campaign_contact')
     }
+  },
+  { auto: true, //5
+    date: '2017-09-28',
+    migrate: async function migrate() {
+      await r.knex.schema.alterTable('user', (table) => {
+        table.boolean('terms').default(false);
+      })
+      console.log('added terms column to user')
+    }
   }
   /* migration template
      {auto: true, //if auto is false, then it will block the migration running automatically
diff --git a/src/routes.jsx b/src/routes.jsx
index 6e5c048..a0db1de 100644
--- a/src/routes.jsx
+++ b/src/routes.jsx
@@ -13,6 +13,7 @@ import DashboardLoader from './containers/DashboardLoader'
 import TexterTodoList from './containers/TexterTodoList'
 import TexterTodo from './containers/TexterTodo'
 import Login from './components/Login'
+import Terms from './containers/Terms'
 import React from 'react'
 import CreateOrganization from './containers/CreateOrganization'
 import JoinTeam from './containers/JoinTeam'
@@ -80,6 +81,7 @@ export default function makeRoutes(requireAuth = () => {}) {
         </Route>
       </Route>
       <Route path='login' component={Login} />
+      <Route path='terms' component={Terms} />
       <Route path='invite/:inviteId' component={CreateOrganization} onEnter={requireAuth} />
       <Route path=':organizationUuid/join' component={JoinTeam} onEnter={requireAuth} />
     </Route>
diff --git a/src/server/api/schema.js b/src/server/api/schema.js
index 93ac03c..18f1fb8 100644
--- a/src/server/api/schema.js
+++ b/src/server/api/schema.js
@@ -206,6 +206,7 @@ const rootSchema = `
     unarchiveCampaign(id:String!): Campaign,
     sendReply(id: String!, message: String!): CampaignContact
     findNewCampaignContact(assignmentId: String!, numberContacts: Int!): CampaignContact
+    userAgreeTerms(userId: String!): User
   }
 
   schema {
@@ -343,6 +344,15 @@ async function editCampaign(id, campaign, loaders, user) {
 
 const rootMutations = {
   RootMutation: {
+    userAgreeTerms: async (_, { userId }, { user, loaders }) => {
+      const currentUser = await User
+        .get(id)
+        .update({
+          terms: true
+        })
+      return currentUser
+    },
+
     sendReply: async (_, { id, message }, { loaders }) => {
       if (process.env.NODE_ENV !== 'development') {
         throw new GraphQLError({
diff --git a/src/server/api/user.js b/src/server/api/user.js
index 1ec0b33..30a8b43 100644
--- a/src/server/api/user.js
+++ b/src/server/api/user.js
@@ -13,7 +13,8 @@ export const schema = `
     todos(organizationId: String): [Assignment]
     roles(organizationId: String!): [String]
     assignedCell: Phone
-    assignment(campaignId: String): Assignment
+    assignment(campaignId: String): Assignment,
+    terms: Boolean
   }
 `
 
-- 
2.11.0 (Apple Git-81)


From 6ce15d76159c05c4c0e96270dc0d0b238c429c1f Mon Sep 17 00:00:00 2001
From: Benjamin Mort <benm@getup.org.au>
Date: Tue, 3 Oct 2017 12:21:23 +1100
Subject: [PATCH 2/3] terms working well

---
 src/containers/Terms.jsx          | 15 +++++----------
 src/containers/TexterTodoList.jsx | 10 +++++++++-
 src/server/api/schema.js          |  4 ++--
 src/server/index.js               |  1 +
 4 files changed, 17 insertions(+), 13 deletions(-)

diff --git a/src/containers/Terms.jsx b/src/containers/Terms.jsx
index ed528d3..52e63f0 100644
--- a/src/containers/Terms.jsx
+++ b/src/containers/Terms.jsx
@@ -13,16 +13,10 @@ import { withRouter } from 'react-router'
 
 class Terms extends React.Component {
 
-  componentWillMount() {
-    const user = this.props.data.currentUser
-    console.log('~~~~~~~~', user)
-  }
-
-  handleTermsAgree = () => {
-    console.log('!!!!!!', this.props.data.currentUser.id)
-    this.props
-      .mutations
-      .userAgreeTerms(this.props.data.currentUser.id)
+  handleTermsAgree = async () => {
+    const { data, router, mutations, location } = this.props
+    const userData = await mutations.userAgreeTerms(data.currentUser.id)
+    if (userData.data.userAgreeTerms.terms) { router.push(location.query.next) }
   }
 
   render() {
@@ -78,6 +72,7 @@ const mapMutationsToProps = (ownProps) => ({
         mutation userAgreeTerms($userId: String!) {
           userAgreeTerms(userId: $userId) {
             id
+            terms
           }
         }`,
     variables: {
diff --git a/src/containers/TexterTodoList.jsx b/src/containers/TexterTodoList.jsx
index 3b177a1..af6ddfb 100644
--- a/src/containers/TexterTodoList.jsx
+++ b/src/containers/TexterTodoList.jsx
@@ -4,6 +4,7 @@ import Empty from '../components/Empty'
 import AssignmentSummary from '../components/AssignmentSummary'
 import loadData from './hoc/load-data'
 import gql from 'graphql-tag'
+import { withRouter } from 'react-router'
 
 class TexterTodoList extends React.Component {
   renderTodoList(assignments) {
@@ -30,7 +31,13 @@ class TexterTodoList extends React.Component {
     this.props.data.refetch();
   }
 
+  termsAgreed() {
+    const { data, router } = this.props
+    if (!data.currentUser.terms) { router.push(`/terms?next=${this.props.location.pathname}`) }
+  }
+
   render() {
+    this.termsAgreed()
     const todos = this.props.data.currentUser.todos
     const renderedTodos = this.renderTodoList(todos)
 
@@ -62,6 +69,7 @@ const mapQueriesToProps = ({ ownProps }) => ({
     query: gql`query getTodos($organizationId: String!, $needsMessageFilter: ContactsFilter, $needsResponseFilter: ContactsFilter, $badTimezoneFilter: ContactsFilter) {
       currentUser {
         id
+        terms
         todos(organizationId: $organizationId) {
           id
           campaign {
@@ -98,4 +106,4 @@ const mapQueriesToProps = ({ ownProps }) => ({
   }
 })
 
-export default loadData(TexterTodoList, { mapQueriesToProps })
+export default loadData(withRouter(TexterTodoList), { mapQueriesToProps })
diff --git a/src/server/api/schema.js b/src/server/api/schema.js
index 18f1fb8..f84fd84 100644
--- a/src/server/api/schema.js
+++ b/src/server/api/schema.js
@@ -345,8 +345,8 @@ async function editCampaign(id, campaign, loaders, user) {
 const rootMutations = {
   RootMutation: {
     userAgreeTerms: async (_, { userId }, { user, loaders }) => {
-      const currentUser = await User
-        .get(id)
+      const currentUser = await r.table('user')
+        .get(userId)
         .update({
           terms: true
         })
diff --git a/src/server/index.js b/src/server/index.js
index fe28604..e2e9971 100644
--- a/src/server/index.js
+++ b/src/server/index.js
@@ -179,6 +179,7 @@ app.get('/login-callback',
         email: req.user._json.email,
         is_superadmin: false
       })
+      res.redirect(req.query.state || 'terms')
     }
     res.redirect(req.query.state || '/')
   })
-- 
2.11.0 (Apple Git-81)


From 2c19a0788b4817a1500d236dfb8d2ac4b2a99050 Mon Sep 17 00:00:00 2001
From: Benjamin Mort <benm@getup.org.au>
Date: Tue, 3 Oct 2017 13:14:45 +1100
Subject: [PATCH 3/3] slick

---
 src/containers/Terms.jsx | 130 ++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 101 insertions(+), 29 deletions(-)

diff --git a/src/containers/Terms.jsx b/src/containers/Terms.jsx
index 52e63f0..1bc78c5 100644
--- a/src/containers/Terms.jsx
+++ b/src/containers/Terms.jsx
@@ -1,13 +1,16 @@
 import React from 'react';
 import loadData from './hoc/load-data'
 import gql from 'graphql-tag'
+import Paper from 'material-ui/Paper';
 import {
-  Card,
-  CardTitle,
-  CardActions,
-  CardText,
-} from 'material-ui/Card';
+  Step,
+  Stepper,
+  StepLabel,
+  StepContent,
+} from 'material-ui/Stepper';
+import FlatButton from 'material-ui/FlatButton';
 import RaisedButton from 'material-ui/RaisedButton';
+import Divider from 'material-ui/Divider';
 import wrapMutations from './hoc/wrap-mutations'
 import { withRouter } from 'react-router'
 
@@ -19,33 +22,102 @@ class Terms extends React.Component {
     if (userData.data.userAgreeTerms.terms) { router.push(location.query.next) }
   }
 
-  render() {
+  state = {
+    finished: false,
+    stepIndex: 0,
+  };
+
+  handleNext = () => {
+    const {stepIndex} = this.state;
+    this.setState({
+      stepIndex: stepIndex + 1,
+      finished: stepIndex >= 2,
+    });
+    if (stepIndex >= 2) this.handleTermsAgree()
+  };
+
+  handlePrev = () => {
+    const {stepIndex} = this.state;
+    if (stepIndex > 0) {
+      this.setState({stepIndex: stepIndex - 1});
+    }
+  };
+
+  renderStepActions(step) {
+    const {stepIndex} = this.state;
+
     return (
-      <div styles={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>
-        <Card>
-          <CardTitle title="Code Of Conduct" subtitle="What to expect" />
-          <CardText>
-            <h3><u>Inappropriate Behaviour</u></h3>
-              <p styles={{padding: '20px 0'}}>
-                Occasionally someone might be rude or use inappropriate language to you — please don’t engage or respond in kind. We will make sure that person isn’t contacted again. 
-              </p>
-            <h3><u>Commit to Reply</u></h3>
-              <p styles={{padding: '20px 0'}}>Please commit to responding to people who reply to you. We're attempting to grow trust and understanding in our community and maintaining an open dialogue is key.</p>
-            <h3><u>Retention</u></h3>
-              <p styles={{padding: '20px 0'}}>
-                GetUp maintains a record of all conversations on this Spoke account.
-              </p>
-          </CardText>
-          <CardActions>
-          <RaisedButton
-            primary={true}
-            label="Agree"
-            onClick={this.handleTermsAgree}
+      <div style={{margin: '12px 0'}}>
+        <RaisedButton
+          label={stepIndex === 2 ? 'Agree' : 'Next'}
+          disableTouchRipple={true}
+          disableFocusRipple={true}
+          primary={true}
+          onClick={this.handleNext}
+          style={{marginRight: 12}}
+        />
+        {step > 0 && (
+          <FlatButton
+            label="Back"
+            disabled={stepIndex === 0}
+            disableTouchRipple={true}
+            disableFocusRipple={true}
+            onClick={this.handlePrev}
           />
-          </CardActions>
-        </Card>
+        )}
+      </div>
+    );
+  }
+
+  render() {
+    const {finished, stepIndex} = this.state;
+
+    return (
+      <div style={{maxWidth: 380, maxHeight: 400, margin: 'auto'}}>
+        <Paper style={{padding:20,margin:20}}>
+          <h2>Code Of Conduct</h2>
+          <Divider/>
+          <Stepper activeStep={stepIndex} orientation="vertical">
+            <Step>
+              <StepLabel>
+                <div style={{marginLeft: '25px',paddingLeft: '21px', marginTop: '-46px'}}><u>Inappropriate Behaviour</u></div>
+              </StepLabel>
+              <StepContent>
+                <p>
+                  Occasionally someone might be rude or use inappropriate language to you — please don’t engage or respond in kind. We will make sure that person isn’t contacted again.
+                </p>
+                {this.renderStepActions(0)}
+              </StepContent>
+            </Step>
+            <Step>
+              <StepLabel>
+                <div style={{marginLeft: '25px',paddingLeft: '21px', marginTop: '-46px'}}><u>Commit to Reply</u></div>
+              </StepLabel>
+              <StepContent>
+                <p>Please commit to responding to people who reply to you. We're attempting to grow trust and understanding in our community and maintaining an open dialogue is key.</p>
+                {this.renderStepActions(1)}
+              </StepContent>
+            </Step>
+            <Step>
+              <StepLabel>
+                <div style={{marginLeft: '25px',paddingLeft: '21px', marginTop: '-46px'}}><u>Retention</u></div>
+              </StepLabel>
+              <StepContent>
+                <p>
+                  GetUp maintains a record of all conversations on this Spoke account.
+                </p>
+                {this.renderStepActions(2)}
+              </StepContent>
+            </Step>
+          </Stepper>
+          {finished && (
+            <p style={{margin: '20px 0', textAlign: 'center'}}>
+              Thanks!
+            </p>
+          )}
+        </Paper>
       </div>
-    )
+    );
   }
 }
 
-- 
2.11.0 (Apple Git-81)

